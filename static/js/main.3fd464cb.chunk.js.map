{"version":3,"sources":["firebase/firebase-config.js","helpers/loadNotes.js","types/types.js","helpers/fileUpload.js","actions/notes.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","actions/ui.js","actions/auth.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","loadNotes","uid","a","collection","get","notesSnap","notes","forEach","snapHijo","push","id","data","types","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","activeNote","note","type","payload","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","NotesAppBar","useDispatch","useSelector","state","active","noteDate","moment","date","className","format","style","display","onChange","e","files","text","allowOutsideClick","showConfirmButton","onBeforeOpen","showLoading","fileUrl","close","startUploading","onClick","document","querySelector","click","NoteScreen","formValues","activeId","useRef","useEffect","current","placeholder","autoComplete","src","alt","delete","NothingSelected","setError","err","removeError","finishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","message","logout","JournalEntry","backgroundSize","backgroundImage","JournalEntries","map","Sidebar","signOut","newNote","Date","getTime","add","JournalScreen","LoginScreen","msgError","ui","loading","isFormValid","validator","isEmail","length","onSubmit","preventDefault","disabled","signInWithPopup","to","RegisterScreen","password2","trim","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3fd464cb.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyADOvyDyZu1D4ozokf5g-S-MNBIR3djYKw\",\r\n    authDomain: \"journal-app-6ecfb.firebaseapp.com\",\r\n    projectId: \"journal-app-6ecfb\",\r\n    storageBucket: \"journal-app-6ecfb.appspot.com\",\r\n    messagingSenderId: \"397609386786\",\r\n    appId: \"1:397609386786:web:eb54e6056c0327930a1b7b\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}","import { db } from \"../firebase/firebase-config\"\r\n\r\nexport const loadNotes = async (uid) => {\r\n\r\n    const notesSnap = await db.collection(`${uid}/journal/notes`).get();\r\n    const notes = [];\r\n\r\n    notesSnap.forEach(snapHijo => {\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        })\r\n    })\r\n    return notes;\r\n    \r\n}","export const types ={\r\n\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdated: '[Notes] Updated note',\r\n    notesFileUrl: '[Notes] Updated image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout Cleaning',\r\n\r\n}","\r\nexport const fileUpload = async (file) => {\r\n\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/dnkc8dljf/upload';\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append('upload_preset','react-journal');\r\n    formData.append('file',file);\r\n\r\n    try{\r\n\r\n        const resp = await fetch(cloudUrl,{\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        if(resp.ok){\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        }else{\r\n            throw await resp.json();\r\n        }\r\n\r\n    }catch(error){\r\n        throw error;\r\n    }\r\n\r\n};","import { db } from \"../firebase/firebase-config\";\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { types } from \"../types/types\";\r\nimport Swal from \"sweetalert2\";\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\n\r\nexport const startNewNote = () => {\r\n    return async(dispatch, getState)=>{\r\n\r\n        const {uid} = getState().auth;\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        const doc = await db.collection(`${uid}/journal/notes`).add(newNote);\r\n\r\n        dispatch(activeNote(doc.id, newNote));\r\n        dispatch(addNewNote( doc.id, newNote ) );\r\n\r\n    }\r\n}\r\n\r\nexport const activeNote = (id, note) => {\r\n    return{\r\n        type: types.notesActive,\r\n        payload: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n};\r\n\r\nexport const addNewNote = ( id, note ) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id, ...note\r\n    }\r\n})\r\n\r\nexport const startLoadingNotes = (uid) => {\r\n    return async (dispatch) => {\r\n\r\n        const notes = await loadNotes(uid);\r\n\r\n        dispatch(setNotes(notes));\r\n    }\r\n};\r\n\r\nexport const setNotes = (notes) => {\r\n    return {\r\n        type: types.notesLoad,\r\n        payload: notes\r\n    }\r\n};\r\n\r\n\r\nexport const startSaveNote = (note) => {\r\n\r\n    return async (dispatch,getState) =>{\r\n\r\n        const {uid} = getState().auth;\r\n\r\n        if(!note.url){\r\n            delete note.url;\r\n        }\r\n\r\n        const noteToFirestore = {...note};\r\n        delete noteToFirestore.id;\r\n\r\n        await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore);\r\n\r\n        dispatch(refreshNote(note.id, noteToFirestore));\r\n\r\n        Swal.fire('Saved',note.title,'success');\r\n\r\n    }\r\n\r\n};\r\n\r\nexport const refreshNote = (id, note) => {\r\n\r\n    return {\r\n        type: types.notesUpdated,\r\n        payload: {\r\n            id,\r\n            note:{\r\n                id,\r\n                ...note\r\n            }\r\n        }\r\n    }\r\n\r\n};\r\n\r\nexport const startUploading = (file) => {\r\n\r\n    return async(dispatch,getState) => {\r\n\r\n        const {active:note} = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: 'Uploading',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            showConfirmButton: false,\r\n            onBeforeOpen: ()=>{\r\n                Swal.showLoading();\r\n            }\r\n        });\r\n\r\n        const fileUrl = await fileUpload(file);\r\n\r\n        note.url = fileUrl;\r\n\r\n        dispatch(startSaveNote(note));\r\n\r\n        Swal.close();\r\n\r\n    };\r\n};\r\n\r\nexport const startDeleting = (id) => {\r\n\r\n    return async (dispatch, getState) => {\r\n\r\n        const {uid} = getState().auth;\r\n\r\n        await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n\r\n        dispatch(deleteNote(id));\r\n\r\n    };\r\n\r\n};\r\n\r\nexport const deleteNote = (id) => {\r\n\r\n    return{\r\n        type: types.notesDelete,\r\n        payload: id\r\n    };\r\n};\r\n\r\nexport const noteLogout = () =>{\r\n\r\n    return{\r\n        type: types.notesLogoutCleaning\r\n    };\r\n};","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = (newFormState = initialState) => {\r\n        setValues( newFormState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startSaveNote, startUploading } from '../../actions/notes';\r\nimport moment from 'moment';\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {active:note} = useSelector(state => state.notes);\r\n\r\n    const handleSave = () => {\r\n        dispatch(startSaveNote(note));\r\n    };\r\n\r\n    const handlePictureClick = () => {\r\n        document.querySelector('#fileSelector').click();\r\n    };\r\n\r\n    const handleFileChange = (e) => {\r\n       \r\n        const file = e.target.files[0];\r\n        if(file){\r\n            dispatch(startUploading(file));\r\n        }\r\n    };\r\n\r\n    const noteDate = moment(note.date);\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>{noteDate.format('MMMM Do YYYY, h:mm:ss a')}</span>\r\n\r\n            <input\r\n                id=\"fileSelector\" \r\n                type=\"file\"\r\n                name=\"file\"\r\n                style= {{display: 'none'}}\r\n                onChange= {handleFileChange}\r\n            />\r\n\r\n            <div>\r\n                <button\r\n                    className=\"btn\"\r\n                    onClick={handlePictureClick}\r\n                >\r\n                    Picture\r\n                </button>\r\n                <button\r\n                    className=\"btn\"\r\n                    onClick={handleSave}\r\n                >\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { activeNote, startDeleting } from '../../actions/notes';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { NotesAppBar } from './NotesAppBar';\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { active: note } = useSelector(state => state.notes)\r\n\r\n    const [formValues, handleInputChange, reset] = useForm(note);\r\n\r\n    const { title, body } = formValues;\r\n\r\n    const activeId  = useRef(note.id);\r\n\r\n    useEffect(() => {\r\n        if(note.id !== activeId.current){\r\n            reset(note);\r\n            activeId.current = note.id;\r\n        }\r\n    }, [note,reset]);\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(activeNote(formValues.id,{...formValues}));\r\n\r\n    }, [formValues,dispatch]);\r\n\r\n    const handleDelete = () => {\r\n        dispatch(startDeleting(activeId.current));\r\n    };\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n\r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Some awesome title\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                    name=\"title\"\r\n                    value={title}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <textarea\r\n                    placeholder=\"What happened today\"\r\n                    className=\"notes__textarea\"\r\n                    name=\"body\"\r\n                    value={body}\r\n                    onChange={handleInputChange}\r\n                ></textarea>\r\n\r\n                {\r\n                    (note.url)\r\n                    &&\r\n                    (<div className=\"notes__image\">\r\n                        <img\r\n                            src={note.url}\r\n                            alt=\"imagen\"\r\n                        />\r\n                    </div>)\r\n                }\r\n\r\n            </div>\r\n\r\n            <button\r\n                className=\"btn btn-danger\"\r\n                onClick={handleDelete}\r\n            >\r\n                Delete\r\n            </button>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Select something \r\n                <br/>\r\n                pr create an entry!\r\n            </p>\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nexport const setError = (err) => ({\r\n    type: types.uiSetError,\r\n    payload: err\r\n});\r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError\r\n});\r\n\r\nexport const startLoading = () => {\r\n    return  {\r\n        type: types.uiStartLoading\r\n    }\r\n};\r\n\r\nexport const finishLoading = () => {\r\n    return {\r\n        type: types.uiFinishLoading\r\n    }\r\n};\r\n","import { types } from \"../types/types\";\r\nimport {startLoading, finishLoading} from './ui'\r\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config';\r\nimport Swal from 'sweetalert2';\r\nimport { noteLogout } from \"./notes\";\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    return (dispatch) => {\r\n        dispatch(startLoading());\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then(({ user }) => {\r\n                dispatch(login(user.uid, user.displayName));\r\n                dispatch(finishLoading());\r\n            })\r\n            .catch(e => {\r\n                dispatch(finishLoading());\r\n                Swal.fire('Error', e.message, 'error');\r\n            });\r\n    }\r\n};\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n\r\n    return (dispatch) => {\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then(async ({ user }) => {\r\n                await user.updateProfile({ displayName: name });\r\n                dispatch(login(user.uid, user.displayName))\r\n            })\r\n            .catch(e => {\r\n                Swal.fire('Error', e.message, 'error');\r\n            });\r\n\r\n    }\r\n\r\n};\r\n\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) => {\r\n\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n            .then(({ user }) => {\r\n                dispatch(login(user.uid, user.displayName))\r\n            });\r\n    }\r\n};\r\n\r\nexport const login = (uid, displayName) => {\r\n    return {\r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayName\r\n        }\r\n    }\r\n};\r\n\r\nexport const startLogout = () => {\r\n\r\n    return async(dispatch)=> {\r\n        await firebase.auth().signOut();\r\n        dispatch(logout());\r\n        dispatch(noteLogout());\r\n    }\r\n};\r\n\r\nexport const logout = () => {\r\n    return {\r\n        type: types.logout\r\n    }\r\n};\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport { activeNote } from '../../actions/notes';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport const JournalEntry = ({ id, date, title, body, url }) => {\r\n    \r\n    const noteDate = moment(date);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleEntryClick = () => {\r\n        dispatch(activeNote(id,{\r\n            date,\r\n            title,\r\n            body,\r\n            url\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <div \r\n            className=\"journal__entry pointer animate__animated animate__fadeIn animate__faster\"\r\n            onClick={handleEntryClick}\r\n        >\r\n\r\n            {\r\n                url &&\r\n                <div\r\n                    className=\"journal__entry-picture\"\r\n                    style={{\r\n                        backgroundSize: 'cover',\r\n                        backgroundImage: `url(${url})`\r\n                    }}\r\n                >\r\n                </div>\r\n            }\r\n\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">\r\n                    {title}\r\n                </p>\r\n                <p className=\"journal__entry-content\">\r\n                    {body}\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>{noteDate.format('dddd')}</span>\r\n                <h4>{noteDate.format('Do')}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntry';\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const {notes} = useSelector(state => state.notes)\r\n\r\n    return (\r\n        <div className=\"journal__entries\">\r\n            {\r\n                (notes)\r\n                 &&\r\n                    (notes.map( note => (\r\n                        <JournalEntry \r\n                            key={note.id}\r\n                            {...note}\r\n                        />\r\n                    )))\r\n                \r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/notes';\r\nimport { JournalEntries } from './JournalEntries';\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { name } = useSelector(state => state.auth);\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n    };\r\n\r\n    const handleAddNew = () => {\r\n        dispatch(startNewNote());\r\n    };\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span> {name}</span>\r\n                </h3>\r\n                <button\r\n                    className=\"btn\"\r\n                    onClick={handleLogout}\r\n                >\r\n                    Logout\r\n                </button>\r\n            </div>\r\n\r\n            <div \r\n                className=\"journal__new-entry\"\r\n                onClick={handleAddNew}\r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">\r\n                    New entry\r\n                </p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { NoteScreen } from '../notes/NoteScreen';\r\nimport { NothingSelected } from './NothingSelected';\r\nimport { Sidebar } from './Sidebar';\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const {active} = useSelector(state => state.notes);\r\n\r\n    return (\r\n        <div\r\n            className=\"journal__main-content animate__animated animate__fadeIn animate__faster\"\r\n         >\r\n            <Sidebar />\r\n\r\n            <main>\r\n                {\r\n                    (active)\r\n                        ?(<NoteScreen />)\r\n                        :(<NothingSelected />)\r\n                }\r\n                \r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport validator from 'validator';\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\r\nimport { removeError, setError } from '../../actions/ui';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { msgError } = useSelector(state => state.ui);\r\n    const { loading } = useSelector(state => state.ui);\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const { email, password } = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        if (isFormValid()) {\r\n            dispatch(startLoginEmailPassword(email, password));\r\n        }\r\n\r\n    };\r\n\r\n    const handleGoogleLogin = () => {\r\n        dispatch(startGoogleLogin());\r\n    }\r\n\r\n    const isFormValid = () => {\r\n        if (!validator.isEmail(email)) {\r\n            dispatch(setError('Email is not valid'));\r\n            return false;\r\n        } else if (password.length < 5) {\r\n            dispatch(setError('Password should be at least 6 characters and match each other'));\r\n            return false;\r\n        }\r\n        dispatch(removeError());\r\n        return true;\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n            <form\r\n                onSubmit={handleLogin}\r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n                {\r\n                    msgError\r\n                    &&\r\n                    (<div className=\"auth__alert-error\">\r\n                        {msgError}\r\n                    </div>)\r\n                }\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <button\r\n                    disabled={loading}\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                >\r\n                    Login\r\n                </button>\r\n\r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with social networks</p>\r\n                    <div\r\n                        className=\"google-btn\"\r\n                        onClick={handleGoogleLogin}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link\r\n                    to=\"/auth/register\"\r\n                    className=\"link\"\r\n                >\r\n                    Create new account\r\n                </Link>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport validator from 'validator';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { removeError, setError } from '../../actions/ui';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {msgError} = useSelector(state => state.ui);\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    });\r\n\r\n    const { name, email, password, password2 } = formValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(isFormValid()){\r\n            dispatch(startRegisterWithEmailPasswordName(email,password,name));\r\n        }\r\n    };\r\n\r\n    const isFormValid = () => {\r\n        if(name.trim().length === 0){\r\n            dispatch(setError('Name is not valid'));\r\n            return false;\r\n        }else if(!validator.isEmail(email)){\r\n            dispatch(setError('Email is not valid'));\r\n            return false;\r\n        }else if(password !== password2 || password.length < 5){\r\n            dispatch(setError('Password should be at least 6 characters and match each other'));\r\n            return false;\r\n        }\r\n        dispatch(removeError());\r\n        return true;\r\n    };      \r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Register</h3>\r\n            <form \r\n                onSubmit={handleRegister}\r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n\r\n                {\r\n                    msgError\r\n                    && \r\n                    (<div className=\"auth__alert-error\">\r\n                        {msgError}\r\n                    </div>)\r\n                }\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={name}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    value={password2}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                >\r\n                    Register\r\n                </button>\r\n\r\n                <Link\r\n                    to=\"/auth/login\"\r\n                    className=\"link \"\r\n                >\r\n                    Already register?\r\n                </Link>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <>\r\n\r\n            <div className=\"auth__main\">\r\n                <div className=\"auth__box-container\">\r\n                    <Switch>\r\n                        <Route exact path=\"/auth/login\" component={LoginScreen} />\r\n                        <Route exact path=\"/auth/register\" component={RegisterScreen} />\r\n                        <Redirect to=\"/auth/login\" />\r\n                    </Switch>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route {...rest} \r\n            component={ (props) =>(\r\n                (isAuthenticated)\r\n                    ? (<Component {...props}/>)\r\n                    : (<Redirect to=\"/auth/login\" />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router';\r\n\r\nconst PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n})  => {\r\n\r\n    return (\r\n        <Route {...rest} \r\n            component={ (props) =>(\r\n                (!isAuthenticated)\r\n                    ? (<Component {...props}/>)\r\n                    : (<Redirect to=\"/\" />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n\r\nexport default PublicRoute\r\n","import React, { useEffect, useState } from 'react';\r\nimport { BrowserRouter as Router, Switch, Redirect } from 'react-router-dom';\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport {firebase} from '../firebase/firebase-config';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../actions/auth';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport PublicRoute from './PublicRoute';\r\nimport { startLoadingNotes } from '../actions/notes';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const [checking, setChecking] = useState(true);\r\n\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged( async(user) => {\r\n            if(user?.uid){\r\n                dispatch(login(user.uid, user.displayName));\r\n                setIsLoggedIn(true);\r\n\r\n                dispatch(startLoadingNotes(user.uid));\r\n            }else{\r\n                setIsLoggedIn(false);\r\n            }\r\n            setChecking(false);\r\n        });\r\n    }, [dispatch,setChecking, setIsLoggedIn])\r\n\r\n    if(checking){\r\n        return(\r\n            <h1>Wait...</h1>\r\n        )\r\n    }\r\n\r\n    return (\r\n\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute isAuthenticated={isLoggedIn} path=\"/auth\" component={AuthRouter} />\r\n                    <PrivateRoute isAuthenticated={isLoggedIn} exact path=\"/\" component={JournalScreen} />\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n/*\r\n    {\r\n        notes: [],\r\n        active: null,\r\n        active: {\r\n            id: 'adads',\r\n            tittle: '',\r\n            body: '',\r\n            imageUrl: '',\r\n            date: 123134231321 \r\n        }\r\n    }\r\n*/\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null,\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            };\r\n\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [action.payload, ...state.notes]\r\n            }\r\n\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [...action.payload]\r\n            };\r\n\r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            };\r\n\r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter(note => note.id !== action.payload)\r\n            };\r\n\r\n        case types.notesLogoutCleaning:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: []\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n});\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","import { types } from \"../types/types\";\r\n\r\n/*\r\n    {\r\n        uid: asd,\r\n        name: ''\r\n    }\r\n*/\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            };\r\n\r\n        case types.logout:\r\n            return {};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react'; \r\nimport { AppRouter } from './routers/AppRouter';\r\nimport {Provider} from 'react-redux';\r\nimport { store } from './store/store';\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n        \r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss';\n\nReactDOM.render(\n    <JournalApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}